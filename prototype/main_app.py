# -*- coding: utf-8 -*-
"""main_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/smwaingeni-ai/AgriX-AfricaDeepTech2025/blob/main/prototype/main_app.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
# STEP 1: Install required packages

# !pip install opencv-python-headless --quiet - essential for Colab

# STEP 2: Import packages
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import os
from google.colab import files
import shutil

# STEP 3: Clone GitHub repo (replace if it exists)
!rm -rf AgriX-AfricaDeepTech2025
!git clone https://github.com/smwaingeni-ai/AgriX-AfricaDeepTech2025.git
# %cd AgriX-AfricaDeepTech2025

# STEP 4: Upload a leaf image
uploaded = files.upload()
uploaded_filename = list(uploaded.keys())[0]

# Move uploaded image into project folder
LEAF_IMAGE_PATH = "data/crops/sample_leaf.jpg"
os.makedirs(os.path.dirname(LEAF_IMAGE_PATH), exist_ok=True)
shutil.move(uploaded_filename, LEAF_IMAGE_PATH)

print(f"âœ… Image uploaded and moved to: {LEAF_IMAGE_PATH}")

# STEP 5: Load the TFLite model
model_path = "prototype/tflite_model/crop_disease_model.tflite"
interpreter = tf.lite.Interpreter(model_path=model_path)
interpreter.allocate_tensors()

input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()
print("ðŸ“¦ Model input shape:", input_details[0]['shape'])

# STEP 6: Define prediction function
def predict_crop_disease(image_path):
    img = Image.open(image_path).convert('RGB').resize((128, 128))
    img_array = np.array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0).astype(np.float32)

    interpreter.set_tensor(input_details[0]['index'], img_array)
    interpreter.invoke()
    output = interpreter.get_tensor(output_details[0]['index'])[0]

    class_names = ['Healthy', 'Maize___Leaf_Spot', 'Tomato___Bacterial_spot']
    prediction = class_names[np.argmax(output)]
    confidence = np.max(output)

    return prediction, confidence

# STEP 7: Run the model on uploaded image
prediction, confidence = predict_crop_disease(LEAF_IMAGE_PATH)
print(f"ðŸŒ¾ Predicted class: {prediction} ({confidence * 100:.2f}% confidence)")
